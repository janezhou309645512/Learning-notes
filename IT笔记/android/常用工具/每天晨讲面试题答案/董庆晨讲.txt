一、如何避免 OOM 异常
OOM 内存溢出，想要避免 OOM 异常首先我们要知道什么情况下会导致
OOM 异常。
图片过大导致 OOM
Android 中 用 bitmap 时 很 容 易 内 存 溢 出 ， 比 如 报 如 下 错 误 ：
Java.lang.OutOfMemoryError : bitmap size exceeds VM budget。
解决方法：
方法 1： 等比例缩小图片
方法 2：对图片采用软引用，及时地进行 recyle()操作
方法 3：使用加载图片框架处理图片，如专业处理加载图片的 ImageLoader 图
片加载框架。还有我们学的 XUtils 的 BitMapUtils 来做处理。
二、Android 中的动画
1、Android 中的动画有哪几类，它们的特点和区别是什么
Android 中动画分为两种，一种是 Tween 动画、还有一种是 Frame 动画。
Tween 动画，这种实现方式可以使视图组件移动、放大、缩小以及产生透明
度的变化；
Frame 动画，传统的动画方法，通过顺序的播放排列好的图片来实现，类似
电影。
三、设计模式六大原则
1.单一职责原则:不要存在多于一个导致类变更的原因。
通俗的说:即一个类只负责一项职责。
2.里氏替换原则:所有引用基类的地方必须能透明地使用其子类
的对象。
通俗的说:当使用继承时。类 B 继承类 A 时，除添加新的方法
完成新增功能 P2 外，尽量不要重写父类 A
的方法，也尽量不要重载父类 A 的方法。如果子类对这些非
抽象方法任意修改，就会对整个继承体系造
成破坏。子类可以扩展父类的功能，但不能改变父类原有的功
能。
3.依赖倒置原则:高层模块不应该依赖低层模块，二者都应该依赖
其抽象；抽象不应该依赖细节；细节应
该依赖抽象。
通俗的说:在 java 中，抽象指的是接口或者抽象类，细节就是
具体的实现类，使用接口或者抽象类的目的
是制定好规范和契约，而不去涉及任何具体的操作，把展现细
节的任务交给他们的实现类去完成。依赖
倒置原则的核心思想是面向接口编程.
4.接口隔离原则:客户端不应该依赖它不需要的接口；一个类对另
一个类的依赖应该建立在最小的接口
上。
通俗的说:建立单一接口，不要建立庞大臃肿的接口，尽量细化
接口，接口中的方法尽量少。也就是说，
我们要为各个类建立专用的接口，而不要试图去建立一个很庞
大的接口供所有依赖它的类去调用。
5.迪米特法则:一个对象应该对其他对象保持最少的了解
通俗的说:尽量降低类与类之间的耦合。
6.开闭原则:一个软件实体如类、模块和函数应该对扩展开放，对
修改关闭。
通俗的说:用抽象构建框架，用实现扩展细节。因为抽象灵活
性好，适应性广，只要抽象的合理，可以基本保持软件
架构的稳定。而软件中易变的细节，我们用从抽象派生的实现
类来进行扩展，当软件需要发生变化时，我们只需要根
据需求重新派生一个实现类来扩展就可以了。
四、请介绍下 ContentProvider 是如何实现数据共享的
在 Android 中如果想将自己应用的数据（一般多为数据库中的数据）提供
给第三发应用，那么我们只能通过 ContentProvider 来实现了。
ContentProvider 是应用程序之间共享数据的接口。使用的时候首先自定义
一个类继承 ContentProvider，然后覆写 query、insert、update、delete 等
传智播客武汉校区就业部出品 务实、创新、质量、分享、专注、责任
22
方法。因为其是四大组件之一因此必须在 AndroidManifest 文件中进行注册。
把自己的数据通过 uri 的形式共享出去
android 系统下 不同程序 数据默认是不能共享访问
需要去实现一个类去继承 ContentProvider
五、BroadCastReceiver 的生命周期
a. 广播接收者的生命周期非常短暂的，在接收到广播的时候创建，

21
onReceive()方法结束之后销毁；
b. 广播接收者中不要做一些耗时的工作，否则会弹出 Application No
Response 错误对话框；
c. 最好也不要在广播接收者中创建子线程做耗时的工作，因为广播接收者被
销毁后进程就成为了空进程，很容易被系统杀掉；
d. 耗时的较长的工作最好放在服务中完成；
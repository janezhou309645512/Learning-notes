1.从操作系统角度请阐述一下线程与进程的区别

答：进程是系统进行资源分配和调度的一个独立单位，线程是CPU调度和分派的基本单位
进程和线程的关系：
（1）一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。
（2）资源分配给进程，同一进程的所有线程共享该进程的所有资源。
（3）线程在执行过程中，需要协作同步。不同进程的线程间要利用消息通信的办法实现同步。
（4）处理机分给线程，即真正在处理机上运行的是线程。
（5）线程是指进程内的一个执行单元，也是进程内的可调度实体。
线程与进程的区别：

（1）调度：线程作为调度和分配的基本单位，进程作为拥有资源的基本单位。
（2）并发性：不仅进程之间可以并发执行，同一个进程的多个线程之间也可以并发执行。
（3）拥有资源：进程是拥有资源的一个独立单位，线程不拥有系统资源，但可以访问隶属于进程的资源。
（4）系统开销：在创建或撤销进程的时候，由于系统都要为之分配和回收资源，导致系统的明显大于创建或撤销线程时的开销。但进程有独立的地址空间，进程
崩溃后，在保护模式下不会对其他的进程产生影响，而线程只是一个进程中的不同的执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，
一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但是在进程切换时，耗费的资源较大，效率要差些。

2  android的数据存储的方式?

答：Android提供了5种方式存储数据：
（1）使用SharedPreferences存储数据；偏好存储它是Android提供的用来存储一些简单配置信息的一种机制，采用了XML格式将数据存储到设备中。只能在同一个包内使用，不能在不同的包之间使用。
（2）文件存储数据；文件存储方式是一种较常用的方法，在Android中读取/写入文件的方法，与Java中实现I/O的程序是完全一样的，提供了openFileInput()和openFileOutput()方法来读取设备上的文件。
（3）SQLite数据库存储数据；SQLite是Android所带的一个标准的数据库，它支持SQL语句，它是一个轻量级的嵌入式数据库。
（4）使用ContentProvider存储数据；主要用于应用程序之间进行数据交换，从而能够让其他的应用保存或读取此Content Provider的各种数据类型。
（5）网络存储数据；通过网络上提供给我们的存储空间来上传(存储)和下载(获取)我们存储在网络空间中的数据信息。

3.怎么优化listview

答案：
1、如果自定义适配器，那么在getView方法中要考虑方法传进来的参数contentView是否为null，如果为null就创建contentView并返回，如果不为null则直接使用。在这个方法中尽可能少创建view。
2、给contentView设置tag（setTag（）），传入一个viewHolder对象，用于缓存要显示的数据，可以达到图像数据异步加载的效果。
3、如果listview需要显示的item很多，就要考虑分页加载。比如一共要显示100条或者更多的时候，我们可以考虑先加载20条，等用户拉到列表底部的时候再去加载接下来的20条。
4、设置listview的监听器，如果listview是飞快滑动状态则不更新view

4.XML是什么？
　　
答：XML即可扩展标记语言（Extensible Markup language），你可以根据自己的需要扩展XML。XML
中可以轻松定义<books>, <orders>等自定义标签，而在HTML等其他标记语言中必须使用预定义的标签，比如<p>，而不能
使用用户定义的标签。XML主要用于从一个系统到另一系统的数据传输，比如企业级应用的客户端与服务端。

5.说说什么是序列化:
对象的序列化指的是将对象以字节流的形式 传输，即将对象转化（分解）为顺序字节流后应用java.io包中
操作字节流的类实现在各种介质中的数据传输，对象的序列化被广泛地应用与网络分布式的远程调用RMI系统中。

当一个类实现了java.io包中的Serializable接口，则通过该类创建的对象被称之为可序列化对象。

一个对象可序列化的要求是创建该对象的类要实现Serializable接口。
